"""db migration

Revision ID: 0fbe984aa9bd
Revises: 
Create Date: 2022-06-16 20:42:36.734566

"""
import bcrypt
from alembic import op
import sqlalchemy as sa
import geoalchemy2 as gsa


# revision identifiers, used by Alembic.
revision = '0fbe984aa9bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(), nullable=False),
    sa.Column('col1', sa.String(), nullable=True),
    sa.Column('col2', sa.String(), nullable=True),
    sa.Column('col3', sa.String(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('geometry', gsa.Geometry('GEOMETRY', 4326), nullable=False),
    sa.PrimaryKeyConstraint('id', 'job_id')
    )
    op.create_index(op.f('ix_data_id'), 'data', ['id'], unique=False)
    op.create_index(op.f('ix_data_job_id'), 'data', ['job_id'], unique=False)

    op.create_table('counties',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('NAME', sa.String(), nullable=True),
    sa.Column('geometry', gsa.Geometry('GEOMETRY', 4326), nullable=False),
    )

    op.create_table('states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('NAME', sa.String(), nullable=True),
    sa.Column('geometry', gsa.Geometry('GEOMETRY', 4326), nullable=False),
    )
    op.create_index(op.f('ix_states_id'), 'states', ['id'], unique=False)

    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('path', sa.Text(), nullable=True),
    sa.Column('table_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    op.create_table('jobs_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('county', sa.String(), nullable=True),
    sa.Column('open_data_url', sa.String(), nullable=True),
    sa.Column('download_url', sa.String(), nullable=True),
    sa.Column('mapping_service_url', sa.String(), nullable=True),
    sa.Column('property_search_url', sa.String(), nullable=True),
    sa.Column('tax_collect_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_details_id'), 'jobs_details', ['id'], unique=False)
    list_user_roles = op.create_table('user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_roles_id'), 'user_roles', ['id'], unique=False)
    op.bulk_insert(list_user_roles, [
        {'role_id': 0, 'title': 'admin'},
        {'role_id': 1, 'title': 'data'},
        {'role_id': 2, 'title': 'standardize'},
        {'role_id': 3, 'title': 'normalize'},
        {'role_id': 4, 'title': 'viewer'}
    ])

    list_users = op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    admin_pass = bcrypt.hashpw('admin123'.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
    op.bulk_insert(list_users, [
        {
            'email': 'admin@earthify.com',
            'password': admin_pass,
            'first_name': 'System',
            'last_name': 'Admin',
            'role_id': 0
        },
        {
            'email': 'data@earthify.com',
            'password': admin_pass,
            'first_name': 'Data',
            'last_name': 'Uploader',
            'role_id': 1
        },
        {
            'email': 'sd@earthify.com',
            'password': admin_pass,
            'first_name': 'Data',
            'last_name': 'Standardize',
            'role_id': 2
        },
        {
            'email': 'normal@earthify.com',
            'password': admin_pass,
            'first_name': 'Data',
            'last_name': 'Normalize',
            'role_id': 3
        },
        {
            'email': 'view@earthify.com',
            'password': admin_pass,
            'first_name': 'Data',
            'last_name': 'Viewer',
            'role_id': 4
        }
    ])
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_roles_id'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_jobs_details_id'), table_name='jobs_details')
    op.drop_table('jobs_details')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_data_job_id'), table_name='data')
    op.drop_index(op.f('ix_data_id'), table_name='data')
    op.drop_table('data')
    op.drop_index(op.f('ix_counties_id'), table_name='counties')
    op.drop_table('counties')
    # ### end Alembic commands ###
